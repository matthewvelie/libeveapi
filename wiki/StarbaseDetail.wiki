=== Description ===
Contains the settings and fuel status of a starbase

=== Eve Api Call ===
{{{
/// <summary>
/// Returns the settings and fuel status of a starbase
/// </summary>
/// <param name="userId">user ID of account for authentication</param>
/// <param name="characterId">Character ID of a char with director/CEO access in the corp that owns the starbase</param>
/// <param name="fullApiKey">Full access api key of account</param>
/// <param name="itemId">Item ID of the starbase as given in the starbase list</param>
/// <returns></returns>
public static StarbaseDetail GetStarbaseDetail(string userId, string characterId, string fullApiKey, string itemId)
}}}

=== Result ===
* StarbaseDetail Object (See ApiResponse for inherited members) *
|| Member || Type || Description ||
|| UsageFlags || string || ||
|| DeployFlags || string || ||
|| AllowCorporationMembers || bool || ||
|| AllowAllianceMembers || bool || ||
|| ClaimSovereignty || bool || ||
|| OnStandingDropEnabled || bool || ||
|| OnStandingDropStanding|| string|| ||
|| OnStatusDropEnabled|| bool || ||
|| OnStatusDropStanding|| string|| ||
|| OnAgressionEnabled|| bool || ||
|| OnCorporationWarEnabled|| bool || ||
|| FuelList || FuelListItem[] || List of fuels present in the starbase ||

* FuelListItem Object *
|| Member || Type || Description ||
|| TypeId || string || typeID of the fuel ||
|| Quantity || long || Number of units of the fuel remaining ||

=== Example ===
{{{
public static void PrintStarbaseDetail()
{
    StarbaseDetail starbaseDetail = EveApi.GetStarbaseDetail("userId", "characterId", "fullApiKey", "itemId");
    Console.WriteLine("usageFlags: {0} deployFlags: {1}", starbaseDetail.UsageFlags, starbaseDetail.DeployFlags);
    
    foreach (FuelListItem fli in starbaseDetail.FuelList)
    {
        Console.WriteLine("TypeID: {0} Quantity: {1}", fli.TypeId, fli.Quantity);
    }
}
}}}